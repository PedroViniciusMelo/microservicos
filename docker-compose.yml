services:
  database:
    build: database
    expose:
      - "5432"
    ports:
      - "5432:5432"

  discovery:
    build: discovery
    mem_limit: 512m
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  gateway:
    build: gateway
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  catalogo:
    build: catalogo
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - database
  preco:
    build: preco
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - database
  estoque:
    build: estoque
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - database

  message:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.4
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/keycloak/realm-export.json
#      - KC_DB=postgres                        # Usar o PostgreSQL como banco de dados
#      - KC_DB_USERNAME=keycloak               # Usuário do banco de dados
#      - KC_DB_PASSWORD=keycloak_password      # Senha do banco de dados
#     - KC_DB_URL_HOST=postgres               # Nome do serviço PostgreSQL
#      - KC_DB_URL_DATABASE=keycloak           # Nome do banco de dados
#      - KC_DB_URL_PORT=5432                   # Porta do PostgreSQL
    volumes:
      - ./autenticacao/import:/opt/keycloak/data/import
    ports:
      - "8090:8080"
    command: ["start-dev", "--import-realm"]
#    depends_on:
#      - postgres

#  postgres:
#    image: postgres:15
#    environment:
#      - POSTGRES_DB=keycloak                  # Nome do banco de dados
#      - POSTGRES_USER=keycloak                # Usuário do banco de dados
#      - POSTGRES_PASSWORD=keycloak_password   # Senha do banco de dados
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data # Persistir os dados do PostgreSQL no host
#    ports:
#      - "5433:5432"                           # Porta para acessar o PostgreSQL

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#
#
#  autenticacao:
#    build: autenticacao
#    mem_limit: 512m
#    ports:
#      - "9090:9090"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - keycloak
##
volumes:
  postgres-catalog-data:
  postgres-price-data:
  postgres-storage-data:
