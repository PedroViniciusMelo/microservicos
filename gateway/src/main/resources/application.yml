server.port: 8080
spring.application.name: gateway

eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka
eureka.client.initialInstanceInfoReplicationIntervalSeconds: 5
eureka.client.registryFetchIntervalSeconds: 5
eureka.instance.leaseRenewalIntervalInSeconds: 5
eureka.instance.leaseExpirationDurationInSeconds: 5

logging.level.root: INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
logging.level.org.springframework.cloud.gateway: TRACE

spring:
  cloud:
    gateway:
      routes:
        - id: eureka-web-start
          uri: http://${app.eureka-server}:8761
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/

        - id: eureka-web-other
          uri: http://${app.eureka-server}:8761
          predicates:
            - Path=/eureka/**

        - id: catalog
          uri: lb://catalog
          predicates:
            - Path=/catalog/**

        - id: storage
          uri: lb://storage
          predicates:
            - Path=/storage/**

        - id: price
          uri: lb://price
          predicates:
            - Path=/price/**

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://keycloak:8080/realms/tees

management:
  server:
    port: 9101
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: prometheus


# Docker profile

---
spring.config.activate.on-profile: docker
app.eureka-server: discovery
eureka.client.serviceUrl.defaultZone: http://discovery:8761/eureka/
management:
  server:
    port: 9000



